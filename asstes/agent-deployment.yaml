apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-admin
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-view
  namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: kube-admin
  apiGroup: rbac.authorization.k8s.io
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deployment-default-kube-carbo-controller
  name: kube-carbo-controller
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-default-kube-carbo-controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deployment-default-kube-carbo-controller
    spec:
      containers:
      - env:
        - name: APP_KEY
          value: {APP_KEY}
        - name: CLIENT_ID
          value: {CLIENT_ID}
        - name: REMOTE_SCHEMA
          value: {REMOTE_SCHEMA}
        - name: SERVER_ADDRESS
          value: {SERVER_ADDRESS}
        image: regoo707/kub-carbo-controller
        imagePullPolicy: Always
        name: kube-carbo-controller
        ports:
        - containerPort: 1323
          name: htto
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: deployment-default-kube-carbo-controller
  name: kube-carbo-controller
  namespace: default
spec:
  ports:
  - name: http
    port: 1323
    protocol: TCP
    targetPort: 1323
  selector:
    app: deployment-default-kube-carbo-controller
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deployment-default-kube-carbo-agent
  name: kube-carbo-agent
  namespace: default
spec:
  spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-default-kube-carbo-agent
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deployment-default-kube-carbo-agent
    spec:
      containers:
      - env:
        - name: APP_KEY
          value: {APP_KEY}
        - name: CLIENT_ID
          value: {CLIENT_ID}
        - name: REMOTE_SCHEMA
          value: {REMOTE_SCHEMA}
        - name: SERVER_ADDRESS
          value: {SERVER_ADDRESS}
        image: regoo707/kub-carbo-agent
        imagePullPolicy: Always
        name: kube-carbo-agent
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

  